##
##
## (c) Copyright, Real-Time Innovations, Inc. 2001.  All rights reserved.
## No duplications, whole or partial, manual or electronic, may be made
## without prior written permission.  Any such copies, or
## revisions thereof, must display this notice unaltered.
## This code contains trade secrets of Real-Time Innovations, Inc.
##
## modification history:
## ---------------------
## 2.3.x,17jun16,djs PLATFORMS-827 Add non-IDL functionality.
## 2.3,13may15,gpc Added setting of NDDSHOME if undefined in environment
## 2.2,9jun14,vmg created
##========================================================================
#[[######################################################################]]#
#[[#]]# makefile_#buildArchitectureMakefileName()
#[[#]]#
#[[#]]# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
#[[#]]# RTI grants Licensee a license to use, modify, compile, and create
#[[#]]# derivative works of the software solely for use with RTI Connext DDS.
#[[#]]# Licensee may redistribute copies of the software provided that all such
#[[#]]# copies are subject to this license. The software is provided "as is",
#[[#]]# with no warranty of any type, including any warranty for fitness for
#[[#]]# any purpose. RTI is under no obligation to maintain or support the
#[[#]]# software. RTI shall not be liable for any incidental or consequential
#[[#]]# damages arising out of the use or inability to use the software.
#[[#]]#
#[[#]]#
#[[#]]# This makefile was automatically generated by RTI Code Generator (rtiddsgen)
#[[#]]# version ${global.codegenVersion}.
#[[#]]#
#[[#]]#
#[[#]]# Note: This makefile is only meant to build our example applications and
#[[#]]#       may require alterations to build on your system.
#[[#]]#
#[[#]]# Make sure that javac and java are in your path.
#[[#]]#
#[[#]]# Set RTI_JAVA_OPTION to -d64 if you are running Java 8 on 64-bit system
#[[#]]# using 64-bit libraries
#[[######################################################################]]#

#[[#]]# RTI_JAVA_OPTION=-d64

SOURCE_DIR = ${sourceDir}

TARGET_ARCH=${global.architectureName}

#if(!$global.noDefaultNddshome)  
#[[#]]# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := ${global.nddsHome}
endif
#end

ifndef DEBUG
#if(${global.libSuffix}=="d" || ${global.libSuffix}=="zd")
DEBUG=1
#else
DEBUG=0 
#end
endif
ifeq ($(DEBUG),1)
DEBUG_FLAGS += -g
else
DEBUG_FLAGS = 
endif

JAVA_PATH = $javaPath
JAVAC_PATH = $javacPath

JAVA_SOURCES =#foreach($source in ${sourceFileList}) #[[$]]#(SOURCE_DIR)$source#end#foreach($s in ${additionalSourceFiles}) #[[$]]#(SOURCE_DIR)$s#end

CLASS_FILES  = #[[$]]#(JAVA_SOURCES:%.java=%.class)

RTI_CLASSPATH :=#foreach($classpath in ${javaClasspath}) $classpath#end


%.class : %.java
	#[[$]]#(JAVAC_PATH) $(DEBUG_FLAGS) -classpath ".${separator}#[[$]]#(RTI_CLASSPATH)" #[[$]]#<

all: #[[$]]#(CLASS_FILES)
 
#[[#]]#
#[[#]]# Convenient way to run the java programs
#[[#]]#

export $pathVariable := #foreach($libsDir in ${libsDirs})$libsDir$separator#end#[[$]]#($pathVariable)

#if(${global.idlFileName})
${exampleType}Publisher: ${exampleTypeClassPath}Publisher.class
	#[[$]]#(JAVA_PATH) ${additionalArgs} #[[$]]#(RTI_JAVA_OPTION) -classpath ".${separator}#[[$]]#(RTI_CLASSPATH)" ${exampleTypeClassPackage}Publisher #[[$]]#(ARGS)
 
${exampleType}Subscriber: ${exampleTypeClassPath}Subscriber.class
	#[[$]]#(JAVA_PATH) ${additionalArgs} #[[$]]#(RTI_JAVA_OPTION) -classpath ".${separator}#[[$]]#(RTI_CLASSPATH)" ${exampleTypeClassPackage}Subscriber #[[$]]#(ARGS)
#else
${global.execNames}: ${exampleTypeClassPath}${global.execNames}.class
	#[[$]]#(JAVA_PATH) ${additionalArgs} #[[$]]#(RTI_JAVA_OPTION) -classpath ".${separator}#[[$]]#(RTI_CLASSPATH)" ${global.execNames} #[[$]]#(ARGS)
#end
